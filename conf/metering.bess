# Copyright (c) 2014-2016, The Regents of the University of California.
# Copyright (c) 2016-2017, Nefeli Networks, Inc.
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions are met:
#
# * Redistributions of source code must retain the above copyright notice, this
# list of conditions and the following disclaimer.
#
# * Redistributions in binary form must reproduce the above copyright notice,
# this list of conditions and the following disclaimer in the documentation
# and/or other materials provided with the distribution.
#
# * Neither the names of the copyright holders nor the names of their
# contributors may be used to endorse or promote products derived from this
# software without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
# LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.




#Metering::Qos(fields=[{'attr_name':'inport', 'num_bytes':4},{'attr_name':'outport', 'num_bytes':8}], values=[{'offset':26, 'num_bytes':1},{'offset':27, 'num_bytes':1},{'offset':28, 'num_bytes':1},{'offset':29, 'num_bytes':4},{'offset':33, 'num_bytes':4},{'offset':37, 'num_bytes':4},{'offset':41, 'num_bytes':4},{'offset':45, 'num_bytes':4},{'offset':49, 'num_bytes':4},{'offset':53, 'num_bytes':4},{'offset':57, 'num_bytes':4},{'offset':57, 'num_bytes':4}])
Metering::Qos(fields=[{'attr_name':'inport',
              'num_bytes':4},{'attr_name':'outport', 'num_bytes':8}],
              values=[{'offset':26, 'num_bytes':1}])

Source() -> SetMetadata(attrs=[{'name': 'inport', 'size': 4, 'value_int': 6}, {'name': 'outport', 'size':8, 'value_int':5}]) -> Metering

#Metering:0 -> S::Split(size=2, attribute='val1')
Metering:0 -> Sink() 
Metering:1 -> Sink()   # used as default gate
#S:0 -> Sink()
#S:1 -> Sink()
#S:2 -> Sink()
#Metering.add(fields=[{'value_int':0x6}, {'value_int':0x5}], gate=0,values=[{'value_int':2},{'value_int':1}])



#Metering.add(fields=[{'value_int':0x6}, {'value_int':0x5}], gate=0,values=[{'value_int':10},{'value_int':20},{'value_int':30},{'value_int':40},{'value_int':50},{'value_int':60},{'value_int':70},{'value_int':80},{'value_int':90},{'value_int':100},{'value_int':110},{'value_int':120}])
Metering.add(fields=[{'value_int':0x6}, {'value_int':0x5}],
             gate=0,cir=50000,pir=50000,cbs=2048,pbs=2048,ebs=2048,values=[{'value_int':10}])
#Metering.add(fields=[{'value_bin':aton('172.12.55.99')}, {'value_bin':aton('12.34.56.78')}], gate=0,values=[{'value_bin':aton('172.16.100.1')}, {'value_bin':aton('10.0.0.1')}])

#Metering.add(fields=[{'value_bin':aton('172.12.55.99')}, {'value_bin':aton('12.34.56.78')}], gate=0,values=[{'value_bin':aton('172.16.100.1')}, {'value_bin':aton('10.0.0.1')}])
#Metering.add(fields=[{'value_int':6}, {'value_bin':aton('172.12.55.99')}, {'value_bin':aton('12.34.56.78')}], gate=1)
#Metering.add(fields=[{'value_int':17}, {'value_bin':aton('172.12.55.99')}, {'value_bin':aton('12.34.56.78')}], gate=2)

# delete test
#Metering.add(fields=[{'value_bin':b'\x11'}, {'value_bin':aton('192.168.1.123')}, {'value_bin':aton('12.34.56.78')}], gate=3)
#Metering.delete(fields=[{'value_bin':b'\x11'}, {'value_bin':aton('192.168.1.123')}, {'value_bin':aton('12.34.56.78')}])

Metering.set_default_gate(gate=1)
